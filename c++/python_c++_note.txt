1.
vs2013 c++ 工程C++CallPython需要包含python安装目录的include目录，库目录，库文件

2.
vs2013 c++ 工程需要保持和python的版本一致，实例中用Release，x64平台

3.
vs2013 c++ 工程PythonDll右键工程->Properties->Configuration Properties->C/C++->Advanced->Calling Convention,将其设置为__stdcall即可。
这个值默认是空，因为默认就是__cdecl，当设置为__stdcal，表示这个工程下的所有函数默认使用__stdcall约定 

4.
python调用vs2013 c++ Dll, 需要保持vs2013生成的调用约定一致，不能混用

# stdcall调用约定：
# dll = ctypes.WinDLL("PythonDll")
# dll = ctypes.WinDLL(os.path.join(CUR_PATH, 'PythonDll'))
# dll = ctypes.windll.LoadLibrary("PythonDll")
# print(dll.add(1,3))
# print(dll.sub(a_ctypes_ptr,b_ctypes_ptr))

# cdecl调用约定：
# lib = CDLL("PythonDll.dll")
# lib = ctypes.cdll.LoadLibrary(".\PythonDll.dll")
lib = ctypes.cdll.LoadLibrary("PythonDll.dll")
print(lib.add(1,3))
print(lib.sub(a_ctypes_ptr,b_ctypes_ptr))